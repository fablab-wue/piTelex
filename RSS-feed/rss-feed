#! /bin/bash

### Change these settings to your needs.
### Keep in mind that LINELENGTH does not consider Umlaut or "ÃŸ" expansion, so calculate some extra space in case of Umlauts...

RSSROOT=/home/pi/piTelex/RSS-feed
NEWS=$RSSROOT/news
LOG=$NEWS/log
LINELENGTH=65
CFG=$RSSROOT/newsfeeds.cfg

### no user serviceable parts below ###

mkdir -p "$NEWS"

# look which feeds are active and remember them
ACTIVELIST=$NEWS/.activefeeds.$$
ps  -x -o pid,cmd | grep rssFileWriter | grep -v grep | sed -e 's/^[ \t]*//' | cut -d' ' -f1,10 > $ACTIVELIST



# delete memo file on exit
trap "rm -f $ACTIVELIST" EXIT

case "$1" in
  start)
	if [ -r "$CFG" ] ; then
		STARTED=0
	  	while  read SVC URL DELAY; do
			if [ ! -z "$SVC" ] ; then
				if [[ "$SVC" != *"#"* ]] ; then
					if [ $# = 2 -a "$2" = "$SVC" -o  $# = 1 ] ; then
						RUNNING=`grep "$SVC" "$ACTIVELIST"`
						STARTED=1 
						if [ -z "$RUNNING" ] ; then
							[ -z "$DELAY" ] && DELAY=10 
							echo -n "  starting  $SVC ($DELAY s) ... "
							rm -rf $NEWS/$SVC
							mkdir -p $NEWS/$SVC $LOG
							python3 $RSSROOT/rssFileWriter.py -f -t "$DELAY" -s "$LINELENGTH" -n "$SVC"  -p "$NEWS/$SVC/" -u "$URL" &> "$LOG/$SVC.log" & 
							echo "done."
						else
							echo "  $SVC already running."
						fi	
					fi
				fi
			fi
		done < "$CFG"
	else	
		echo "  $CFG not found."
	fi
	if [ "$STARTED" = "0" ] ; then
		if [ "$#" = "2" ] ; then
			echo "  $2 has no config entry in $CFG."
		else
			echo "  No newsfeed(s) configured in $CFG."
			$0 help
		fi	
	fi	
	;;

  stop)
	KILLED=0
  	while  read ID SVC ; do
		if [ $# = 2 -a "$2" = "$SVC" -o  $# = 1 ] ; then
			echo -n "  stopping  $SVC ... "
			rm -rf $NEWS/$SVC
			kill $ID && KILLED=1 && echo "done."
		fi	
	done < "$ACTIVELIST"
	if [ "$KILLED" = "0" ] ; then
		if [ "$#" = "2" ] ; then
			echo "  $2 not running."
		else
			echo "  Nothing to do."
		fi	
	fi	
	;;

  status)
	if [ -r "$CFG" ] ; then
	  	while  read SVC URL ; do
			if [ ! -z "$SVC" ] ; then
				if [[ "$SVC" != *"#"* ]] ; then
					if [ $# = 2 -a "$2" = "$SVC" -o  $# = 1 ] ; then
						echo -ne "  $SVC:  \t "
						RUNNING=`grep "$SVC" "$ACTIVELIST"`
						if [ -z "$RUNNING" ] ; then
							echo -n "not "
						fi	
						echo "running."
					fi	
				fi	
			fi
		done < "$CFG"
	else	
		echo "  $CFG not found."
	fi
	;;

  list)
	if [ -r "$CFG" ] ; then
		echo "  Configured newsfeeds:"
	  	while read SVC URL ; do
			if [[ "$SVC" != *"#"* ]] ; then
				if [ ! -z "$SVC" ] ; then
					echo -e "  $SVC \t ($URL)"
				fi
			fi
		done < "$CFG"
	else	
		echo "  $CFG not found."
	fi
	;;
	
  help)
	cat <<EOT

  $0 helps coordinate the monitoring of multiple newsfeeds.

  It is configured by 
  - a few path settings in $0 itself (defaults should match)
  - file "$CFG" which holds the info about the newsfeeds.

  For each newsfeed you want to monitor you have to create an entry in file $CFG.

  An entry consists of a single line which holds 
  - the short identifier (name) of the feed, 
  - the corresponding url, 
  - as option, the number of seconds between two checks of the feed (default 10s), 
  each separated by whitespace.

  The identifier must not contain whitespace.
  '#' as first non-whitespace-char in a line marks it as comment.
  Empty lines are permitted.

usage:

  "$0 start"  fire up all enabled newsfeeds or "$0 start {feedname}" to start a single feed listed in the config file.
  "$0 status" list all running newsfeeds.
  "$0 stop"   stop all running newsfeeds or "$0 stop {feedname}" to stop a single feed.
  "$0 list"   list all enabled newsfeeds.
  "$0 help"   display this help.
EOT
	;;

  *)
	echo "Usage: $0 {start|stop|status|list|help}" 
	exit 1
esac
exit 0
